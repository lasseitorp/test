// Sass map to define colors. Each set should have a "Dark" variation when required.
// e.g. `default` and `default-dark`. Or `purple` and `purple-dark`.
$button-colors: (
  primary: (
    text: clr(text-inverse),
    bg: clr(gray-5),
    text-hover: clr(text-inverse),
    bg-hover: clr(gray-4),
  ),
  primary-dark: (
    text: clr(text-inverse),
    bg: clr(gray-4),
    text-hover: clr(text-inverse),
    bg-hover: clr(gray-5),
  ),
  secondary: (
    text: clr(text-inverse),
    bg: clr(secondary),
    text-hover: clr(secondary),
    bg-hover: clr(highlight),
  ),
  secondary-dark: (
    text: clr(text),
    bg: clr(secondary),
    text-hover: clr(text),
    bg-hover: clr(highlight-high),
  ),
);

// Mixin to define colors for one or more schemes.
// Simply pass the color scheme to the mixin to get the colors defined in the map.
// e.g. @include buttonColors(default) will get all of the colors defined in the "default" section.
@mixin buttonColors(
  $scheme,
  $pallate: map-get($button-colors, $scheme),
  $map: $button-colors
) {
  color: map-get($pallate, text);
  background-color: map-get($pallate, bg);

  &:visited {
    color: map-get($pallate, text);
  }

  &:hover,
  &:focus {
    color: map-get($pallate, text-hover);
    background-color: map-get($pallate, bg-hover);
  }

  &:focus-visible {
    outline-color: map-get($pallate, bg-hover);
    outline-width: 2px;
    color: map-get($pallate, text-hover);
    background-color: map-get($pallate, bg-hover);
  }
}

// The button-base mixin contains styles that apply to all buttons
// regardless of color or size.
@mixin button-base {
  border: none;
  cursor: pointer;
  display: inline-flex;
  justify-content: center;
  align-items: center;
  text-decoration: none;
  text-align: center;
  outline-offset: 2px;
  outline-width: 0;
  outline-style: solid;
  border-radius: 1px;
  @include transition();
}

// Button color variations
// Note how we include dark mode options for each
@mixin button-color-primary {
  @include buttonColors(primary);

  @media (prefers-color-scheme: dark) {
    @include buttonColors(primary-dark);
  }
}

@mixin button-color-secondary {
  @include buttonColors(secondary);

  @media (prefers-color-scheme: dark) {
    @include buttonColors(secondary-dark);
  }
}

// Button size variations
@mixin button-medium {
  line-height: 1.4;
  padding: $space $space-double;
}

@mixin button-large {
  line-height: 2;
  padding: $space $space-double;
}

.button {
  @include button-base;
  @include button-color-primary;
  @include button-medium;

  &--alt {
    @include button-color-secondary;
    @include button-large;
  }
}

.button__icon {
  display: inherit;

  &--start {
    margin-right: 8px;
    margin-left: -4px;
  }

  &--end {
    margin-right: -4px;
    margin-left: 8px;
  }
}
